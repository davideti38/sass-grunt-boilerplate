/* ===========================
   Mixins
   =========================== */

// background image mixin

@mixin img-replace($img, $w, $h, $display: block) {
	background-image  : url('#{$path--rel}/#{$img}');
	background-repeat : no-repeat;
	width             : $w;
	height            : $h;
	display           : $display;

}

// BEM selectors

 @mixin e($element) {
	&__#{$element} {
		@content;
	}
 }

  @mixin m($modifier) {
	&--#{$modifier} {
		@content;
	}
 }


// icons

@mixin icon($position: before, $icon: false, $styles: true) {
    @if $position == both {
        $position: 'before, &:after';
    }
    // Either a :before or :after pseudo-element, or both, defaulting to :before
    &:#{$position} {
        @if $icon {
            // A particular icon has been specified
            content: "#{map-get($icons, $icon)}";
        }
        @if $styles {
            // Supportive icon styles required
            speak: none;
            font-style: normal;
            font-weight: normal;
            font-family: 'icons';
        }
        // Include any extra rules supplied for the pseudo-element
        @content;
    }
}


// center to axis

@mixin center-axis($axis: "both",$posTop: 50%){ position:absolute; @if $axis == "y"{ top:50%; -webkit-transform: translateY(-50%); -moz-transform: translateY(-50%); -ms-transform: translateY(-50%); -o-transform: translateY(-50%); transform: translateY(-50%); } @if $axis == "x"{ left:50%; -webkit-transform: translateX(-50%); -moz-transform: translateX(-50%); -ms-transform: translateX(-50%); -o-transform: translateX(-50%); transform: translateX(-50%); } @if $axis == "both"{ top:$posTop; left:50%; -webkit-transform: translate(-50%, -50%); -moz-transform: translate(-50%, -50%); -ms-transform: translate(-50%, -50%); -o-transform: translate(-50%, -50%); transform: translate(-50%, -50%); }
}


// shape

@mixin shape($shape, $size, $color){
  @if $shape == square {
    width: $size;
    height: $size;
    background-color: $color;
  }
  @if $shape == circle {
    width: $size;
    height: $size;
    background-color: $color;
    border-radius: 50%;
  }
  @if $shape == triangle {
    width: 0;
    height: 0;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size*1.5 solid $color;
  }
  @if $shape == right-triangle {
    width: 0;
    height: 0;
    border-bottom: $size solid $color;
    border-right: $size solid transparent;
  }
    @if $shape == left-triangle {
    width: 0;
    height: 0;
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
  }
  @if $shape == diamond {
    width: $size;
    height: $size;
    transform :rotate(-45deg);
    overflow: hidden;
    position: relative;
    text-decoration: none;
    background:$color;
  }
  @if $shape == pentagon {
    position: relative;
    width: $size;
    border-width: (25/27)*$size (1/3)*$size 0;
    border-style: solid;
    border-color: $color transparent;

    &:before {
      content: "";
      position: absolute;
      height: 0;
      width: 0;
      top: (-17/11)*$size;
      left: (-1/3)*$size;
      border-width: 0 (5/6)*$size (35/54)*$size;
      border-style: solid;
      border-color: transparent transparent $color;
    }
  }
  @if $shape == hexagon {
    width: $size*2;
    height: $size*1.1;
    background: $color;
    position: relative;
    &:before {
      content: "";
      position: absolute;
      top: $size/-2;
      left: 0;
      width: 0;
      height: 0;
      border-left: $size solid transparent;
      border-right: $size solid transparent;
      border-bottom: $size/2 solid $color;
    }
    &:after {
      content: "";
      position: absolute;
      bottom: $size/-2;
      left: 0;
      width: 0;
      height: 0;
      border-left: $size solid transparent;
      border-right: $size solid transparent;
      border-top: $size/2 solid $color;
    }
  }
  @if shape == octogon {
    width: $size;
    height: $size;
    background: transparent;
    position: relative;
    text-align: center;

    &:before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      border-bottom: 29/$size solid $color;
      border-left: 29/$size solid transparent;
      border-right: 29/$size solid transparent;
      width: 42/$size;
      height: 0;
    }

    &:after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      border-top: 29/$size solid $color;
      border-left: 29/$size solid transparent;
      border-right: 29/$size solid transparent;
      width: 42/$size;
      height: 0;
    }
  }
}
